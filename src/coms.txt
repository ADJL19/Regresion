main.py
from timeit import timeit

import cProfile, pstats
import re

num_ejecuciones= 10
tiempo1 = timeit("fnc.validacionCruzada(modelosRL, predictores, target, metricas)", globals=globals(), number=num_ejecuciones)
tiempo2 = timeit("fnc.KHojas(modelosRL, predictores, target)", globals=globals(), number=num_ejecuciones)

print(f"CV time: {tiempo1/60:.10f} min") #10.4474893100 min
print(f"KF time: {tiempo2/60:.10f} min") #10.4315801067 min

profiler = cProfile.Profile()
profiler.enable()
main()
profiler.disable()
stats = pstats.Stats(profiler).sort_stats('ncalls')
stats.print_stats()
---------------------------------------------------------------------------------------------------------------------
fnc.py

from sklearn.model_selection import KFold

from multiprocessing import Process
from threading import Thread

class MiHilo(Thread):
    def __init__(self, nombre, tecnica, predictores, target, metricas, **kwargs):
        super().__init__(**kwargs)
        self.nombre = nombre
        self.tecnica = tecnica
        self.predictores = predictores
        self.target = target
        self.metricas = metricas

    def run(self):
        validacionCruzadaSimple(self.nombre, self.tecnica, self.predictores, self.target, self.metricas)

def validacionCruzadaMulti(modelos, predictores, target, metricas):
    hilos = []
    for nombre, tecnica in modelos.items():
        hilo = MiHilo(nombre, tecnica, predictores, target, metricas)
        hilo.start()
        hilos.append(hilo)
    for hilo in hilos:
        hilo.join()

    return crearDF(modelos, metricas)

# def KHojasSimple(nombre, tecnica, predictores, target):

def KHojas(modelos, predictores, target):
    for nombre, tecnica in modelos.items():
        kf = KFold(n_splits=tecnica.CV)   
        for train, test in kf.split(predictores):
            tecnica.entrenarModelo(predictores[train], target[test])


# d1= pd.read_excel("C:/Users/adzl/Documents/GitHub/MiniEolica/info/metricas/SVR.xlsx", sheet_name= "SVR100rbf")
# d2= pd.read_excel("C:/Users/adzl/Documents/GitHub/MiniEolica/info/metricas/BR.xlsx", sheet_name="BR1000000000100000000010000000001000000000")
# d3= pd.read_excel("C:/Users/adzl/Documents/GitHub/MiniEolica/info/metricas/PN.xlsx", sheet_name= "PN4True")
# d4= pd.read_excel("C:/Users/adzl/Documents/GitHub/MiniEolica/info/metricas/NN/TANH/NN11.xlsx")

# import numpy as np
# d4.RMSE= np.sqrt(d4.MSE)
# print(np.mean(d1.RMSE))
# print(np.mean(d2.RMSE))
# print(np.mean(d3.RMSE))
# print(np.mean(d4.RMSE))

# data= pd.concat([d3, d2, d1, d4], axis= 0, ignore_index= True)
# data.Tecnica[0:10] = "PR"
# data.Tecnica[10:20] = "BR"
# data.Tecnica[20:30] = "SVR"
# data.Tecnica[30:40] = "MLP"